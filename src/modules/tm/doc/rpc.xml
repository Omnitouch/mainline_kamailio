<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
   "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<section id="tm.rpcs" xmlns:xi="http://www.w3.org/2001/XInclude">
    <sectioninfo>
    </sectioninfo>
	<title>RPC Commands</title>

	<section id="tm.rpc.list">
		<title>
		<function moreinfo="none">tm.list</function>
		</title>
		<para>
		List details of transactions.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>none</emphasis>
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.rpc.t_uac_start">
		<title>
		<function moreinfo="none">tm.t_uac_start</function>
		</title>
		<para>
		Generates and sends a local SIP request.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>method</emphasis> - request method
			</para></listitem>
			<listitem><para>
				<emphasis>RURI</emphasis> - request SIP URI
			</para></listitem>
			<listitem><para>
				<emphasis>NEXT HOP</emphasis> - next hop SIP URI (OBP);
				use <quote>.</quote> if no value.
			</para></listitem>
			<listitem><para>
				<emphasis>socket</emphasis> - local socket to be used for
				sending the request; use <quote>.</quote> if no value.
			</para></listitem>
			<listitem><para>
				<emphasis>headers</emphasis> - set of additional headers to
				be added to the request; at least
				<quote>From</quote> and <quote>To</quote> headers must be
				provided)
			</para></listitem>
			<listitem><para>
				<emphasis>body</emphasis> - (optional, may not be present)
				request body (if present, requires the
				<quote>Content-Type</quote> and <quote>Content-length</quote>
				headers)
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.rpc.t_uac_start_hex">
		<title>
		<function moreinfo="none">tm.t_uac_start_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_start, but with hexa-encoded body. The whitespaces
		are ignored when decoding the body.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait">
		<title>
		<function moreinfo="none">tm.t_uac_wait</function>
		</title>
		<para>
		Similar to tm.t_uac_start, but waits asynchronously for the SIP response
		and tries to provide its details via RPC response.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_hex">
		<title>
		<function moreinfo="none">tm.t_uac_wait_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_wait, but with hexa-encoded body. The whitespaces
		are ignored when decoding the body.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_block">
		<title>
		<function moreinfo="none">tm.t_uac_wait_block</function>
		</title>
		<para>
		Similar to tm.t_uac_start, but blocks waiting for the SIP response and
		returns the SIP reply code and reason text via RPC response. It waits
		up to 80 seconds, if no reply is received, it returns a RPC fault 500
		code. While waiting, the RPC process cannot handle other RPC commands.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_block_hex">
		<title>
		<function moreinfo="none">tm.t_uac_wait_block_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_wait_block, but with hexa-encoded body. The whitespaces
		are ignored when decoding the body.
		</para>
	</section>

	<section id="tm.rpc.t_uac_start_noack">
		<title>
		<function moreinfo="none">tm.t_uac_start_noack</function>
		</title>
		<para>
		Similar to tm.t_uac_start, but do not automatically send ACK for local
		INVITE requests.
		</para>
	</section>

	<section id="tm.rpc.t_uac_start_noack_hex">
		<title>
		<function moreinfo="none">tm.t_uac_start_noack_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_start_noack, but with hexa-encoded body. The whitespaces
		are ignored when decoding the body.
		</para>
	</section>


	<section id="tm.rpc.t_uac_wait_noack">
		<title>
		<function moreinfo="none">tm.t_uac_wait_noack</function>
		</title>
		<para>
		Similar to tm.t_uac_wait, but do not automatically send ACK for local
		INVITE requests.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_noack_hex">
		<title>
		<function moreinfo="none">tm.t_uac_wait_noack_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_wait_noack, but with hexa-encoded body. The whitespaces
		are ignored when decoding the body.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_block_noack">
		<title>
		<function moreinfo="none">tm.t_uac_wait_block_noack</function>
		</title>
		<para>
		Similar to tm.t_uac_wait_block, but do not automatically send ACK for
		local INVITE requests.
		</para>
	</section>

	<section id="tm.rpc.t_uac_wait_block_noack_hex">
		<title>
		<function moreinfo="none">tm.t_uac_wait_block_noack_hex</function>
		</title>
		<para>
		Similar to tm.t_uac_wait_block_noack, but with hexa-encoded body.
		The whitespaces are ignored when decoding the body.
		</para>
	</section>

	<section id="tm.rpc.t_uac_attrs">
		<title>
		<function moreinfo="none">tm.t_uac_attrs</function>
		</title>
		<para>
		Combine the tm.t_uac_* variants, by providing the first parameter with
		attributes, then the other parameters are like for tm.t_uac_start.
		</para>
		<para>
		The attributes are in the format "name1=value1;...;nameX=valueX". The
		name of the attribute can be:
		</para>
		<itemizedlist>
			<listitem><para>
				<emphasis>mode</emphasis> - control how the command is done. If
				not provided or the value is "start", acts like tm.t_uac_start.
				The other values can be: "wait" - act like tm.t_uac_wait;
				"block" - act like tm.t_uac_wait_block.
			</para></listitem>
			<listitem><para>
				<emphasis>cbflags</emphasis> - the transaction callback flags. The
				values can be: "noack" - to not automatically send ACK for local
				INVITE requests
			</para></listitem>
			<listitem><para>
				<emphasis>rpflags</emphasis> - RPC parameters flags. The values
				can be: 1 - the body is hexa-encoded value.
			</para></listitem>
			<listitem><para>
				<emphasis>fr_timeout</emphasis> - the fr_timeout value for the
				local transaction.
			</para></listitem>
			<listitem><para>
				<emphasis>fr_inv_timeout</emphasis> - the fr_inv_timeout value
				for the local transaction.
			</para></listitem>
		</itemizedlist>
		<example>
		<title>Using <quote>tm.t_uac_attrs</quote></title>
		<programlisting format="linespecific">
...
kamcli rpc tm.t_uac_attrs 'reply=wait;cbflags=noack;rpflags=1' 'INVITE' ...
...
</programlisting>
		</example>
	</section>


	<section id="tm.rpc.cancel">
		<title>
		<function moreinfo="none">tm.cancel</function>
		</title>
		<para>
		Generates and sends a CANCEL for an existing local SIP request.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>callid</emphasis> - callid of the INVITE request
				to be cancelled.
			</para></listitem>
			<listitem><para>
				<emphasis>cseq</emphasis> - cseq of the INVITE request to be
				cancelled.
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.rpc.hash_stats">
		<title>
		<function moreinfo="none">tm.hash_stats</function>
		</title>
		<para>
		Gets information about the load of TM internal hash table.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>none</emphasis>
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.rpc.reply">
		<title>
		<function moreinfo="none">tm.reply</function>
		</title>
		<para>
		Generates and sends a reply for an existing inbound SIP transaction.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>code</emphasis> - reply code
			</para></listitem>
			<listitem><para>
				<emphasis>reason</emphasis> - reason phrase.
			</para></listitem>
			<listitem><para>
				<emphasis>trans_id</emphasis> - transaction identifier
				(has the hash_entry:label format)
			</para></listitem>
			<listitem><para>
				<emphasis>to_tag</emphasis> - To tag to be added to TO header
			</para></listitem>
			<listitem><para>
				<emphasis>new_headers</emphasis> - extra headers to be
				appended to the reply; use a dot (<quote>.</quote>) char
				only if there are no headers;
			</para></listitem>
			<listitem><para>
				<emphasis>body</emphasis> - (optional, may not be present)
				reply body (if present, requires the
				<quote>Content-Type</quote> and <quote>Content-length</quote>
				headers)
			</para></listitem>
		</itemizedlist>
	</section>
	<section id="tm.rpc.reply_callid">
		<title>
		<function moreinfo="none">tm.reply_callid</function>
		</title>
		<para>
		Generates and sends a reply for an existing inbound SIP transaction.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>code</emphasis> - reply code
			</para></listitem>
			<listitem><para>
				<emphasis>reason</emphasis> - reason phrase.
			</para></listitem>
			<listitem><para>
				<emphasis>callid</emphasis> - SIP Call-ID header
			</para></listitem>
			<listitem><para>
				<emphasis>cseq</emphasis> - SIP CSeq header
			</para></listitem>
			<listitem><para>
				<emphasis>to_tag</emphasis> - To tag to be added to TO header
			</para></listitem>
			<listitem><para>
				<emphasis>new_headers</emphasis> - extra headers to be
				appended to the reply; use a dot (<quote>.</quote>) char
				only if there are no headers;
			</para></listitem>
			<listitem><para>
				<emphasis>body</emphasis> - (optional, may not be present)
				reply body (if present, requires the
				<quote>Content-Type</quote> and <quote>Content-length</quote>
				headers)
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.rpc.retransmit_reply">
		<title>
		<function moreinfo="none">tm.retransmit_reply</function>
		</title>
		<para>
		Retransmit the reply for an existing SIP transaction.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>trans_id</emphasis> - transaction identifier
				(has the hash_entry:label format)
			</para></listitem>
		</itemizedlist>
		<example>
		<title>Using <quote>tm.retransmit_reply</quote></title>
		<programlisting format="linespecific">
...
kamcli rpc tm.retransmit_reply 1234:5678
...
</programlisting>
		</example>
	</section>

	<section id="tm.rpc.retransmit_reply_callid">
		<title>
		<function moreinfo="none">tm.retransmit_reply_callid</function>
		</title>
		<para>
		Retransmit the reply for an existing SIP transaction.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>callid</emphasis> - SIP Call-ID header
			</para></listitem>
			<listitem><para>
				<emphasis>cseq</emphasis> - SIP CSeq header
			</para></listitem>
		</itemizedlist>
		<example>
		<title>Using <quote>tm.retransmit_reply_callid</quote></title>
		<programlisting format="linespecific">
...
kamcli rpc tm.retransmit_reply_callid "abc-xyz" "10 INVITE"
...
</programlisting>
		</example>
	</section>

	<section id="tm.rpc.clean">
		<title>
		<function moreinfo="none">tm.clean</function>
		</title>
		<para>
		Trigger a hard clean of expired transactions.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>none</emphasis>
			</para></listitem>
		</itemizedlist>
	</section>

	<section id="tm.stats">
		<title>
		<function moreinfo="none">tm.stats</function>
		</title>
		<para>
		Gets information about current and past TM transaction handling.
		</para>
		<para>Parameters: </para>
		<itemizedlist>
			<listitem><para>
				<emphasis>none</emphasis>
			</para></listitem>
		</itemizedlist>
	</section>

</section>
